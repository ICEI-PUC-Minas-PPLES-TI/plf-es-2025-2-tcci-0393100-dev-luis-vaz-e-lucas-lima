version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: buscar-postgres
    environment:
      POSTGRES_DB: buscar
      POSTGRES_USER: buscar
      POSTGRES_PASSWORD: buscar123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - buscar-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U buscar -d buscar"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Sessions
  redis:
    image: redis:7-alpine
    container_name: buscar-redis
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - buscar-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "redis123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: buscar-backend
    environment:
      - DATABASE_URL=postgresql://buscar:buscar123@postgres:5432/buscar
      - REDIS_URL=redis://:redis123@redis:6379/0
      - PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - buscar-network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: buscar-frontend
    environment:
      - BACKEND_URL=http://backend:3000
      - PORT=8080
    depends_on:
      - backend
    networks:
      - buscar-network
    volumes:
      - ./frontend:/app
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: buscar-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - buscar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  buscar-network:
    driver: bridge
